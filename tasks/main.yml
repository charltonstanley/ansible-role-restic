# restic/tasks/main.yml
---
- name: Install restic
  ansible.builtin.package:
    name: "{{ restic_package_name }}"
    state: present

- name: Ensure group restic group exists
  ansible.builtin.group:
    name: "{{ restic_service_account_group }}"
    state: present

- name: create a service account for restic
  ansible.builtin.user:
    name: "{{ restic_service_account_name }}"
    shell: /usr/sbin/nologin
    group: "{{ restic_service_account_group }}"
    system: true
    create_home: true

- name: Create systemd service from template
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - restic@.service
    - restic@.timer
  notify: enable and start restic timer

- name: Create restic instance directory if it does not exist
  become: true
  ansible.builtin.file:
    path: "{{ restic_service_account_home }}/{{ systemd_instance_name }}"
    state: directory
    mode: '0750'
    owner: root
    group: root

- name: Create .ssh  directory if it does not exist
  become: true
  ansible.builtin.file:
    path: "{{ restic_service_account_home }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ restic_service_account_name }}"
    group: "{{ restic_service_account_group }}"

- name: create restic key id password file
  ansible.builtin.file:
    dest: "{{ restic_service_account_home }}/{{ systemd_instance_name }}/{{ restic_key_id }}"
    state: touch
    mode: '0600'
    owner: root
    group: root

- name: create restic include and exclude files
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "{{ restic_service_account_home }}/{{ systemd_instance_name }}/{{ item }}"
    mode: '0400'
    owner: root
    group: root
  loop:
    - include.files
    - exclude.files
